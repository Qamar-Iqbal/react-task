{"version":3,"sources":["config/fire.js","Login.js","component/Update.js","component/Datafile.js","component/Mainpage.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","login","bind","handleChange","signup","state","email","password","e","this","setState","target","name","value","preventDefault","auth","signInWithEmailAndPassword","then","u","catch","error","console","log","createUserWithEmailAndPassword","className","class","onChange","type","placeholder","onClick","Component","Update","dt","useState","title1","setTitle","title","database","ref","child","id","remove","update","Datafile","dataList","setdataList","useEffect","on","snapshot","snp","val","push","map","index","Mainpage","dataRef","text","signOut","App","user","authListener","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.626a42fc.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBgKvaR_4syGLrVlRuKqZZmrDURFd3J2_U\",\r\n    authDomain: \"react-1826e.firebaseapp.com\",\r\n    projectId: \"react-1826e\",\r\n    storageBucket: \"react-1826e.appspot.com\",\r\n    messagingSenderId: \"163925245524\",\r\n    appId: \"1:163925245524:web:fc97d9342bc175708c37c1\",\r\n    measurementId: \"G-B6D3LWF7K8\"\r\n  };\r\n  // Initialize Firebase\r\n  const fire =firebase.initializeApp(firebaseConfig);\r\n  \r\n  export default fire;","import React, { Component } from 'react';\r\nimport fire from './config/fire';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n    }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  signup(e){\r\n    e.preventDefault();\r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n    }).then((u)=>{console.log(u)})\r\n    .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <form>\r\n          <div class=\"form-group\">\r\n            <label >Email </label>\r\n            <input  value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" placeholder=\"Enter email\" />\r\n            \r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Password </label>\r\n            <input  value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n          </div>\r\n          <button type=\"submit\" onClick={this.login} > Login </button>\r\n          <button onClick={this.signup}  > Signup </button>\r\n        </form>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","import React,{useState} from 'react';\r\nimport fire from '../config/fire';\r\nimport '../App.css';\r\n\r\nexport default function Update({ dt }) {\r\n  const [title1, setTitle] = useState('');\r\n  const handleOnChangedata_ = (e) => {\r\n    setTitle(e.target.value);} \r\n    \r\n  const deleteTodo = () => {\r\n    const dataRef = fire.database().ref('text').child(dt.id);\r\n    dataRef.remove();\r\n  };\r\n  const completeTodo = () => {\r\n    const dataRef = fire.database().ref('text').child(dt.id);\r\n    \r\n    dataRef.update({\r\n      title: title1\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 className={dt.title ? 'title' : ''}>{dt.title}</h1>\r\n      <button onClick={deleteTodo}>Delete</button>\r\n      <input type=\"text\" placeholder=\"Enter to update text\" onChange={handleOnChangedata_} value={title1} />\r\n      <button onClick={completeTodo} >Update</button>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport fire from '../config/fire';\r\nimport Update from './Update';\r\n\r\nexport default function Datafile() {\r\n  const [dataList, setdataList] = useState();\r\n\r\n  useEffect(() => {\r\n    const dataRef = fire.database().ref('text');\r\n    dataRef.on('value', (snapshot) => {\r\n      const snp = snapshot.val();\r\n      const dataList = [];\r\n      for (let id in snp) {\r\n        dataList.push({ id, ...snp[id] });\r\n      }\r\n      setdataList(dataList);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {dataList\r\n        ? dataList.map((dt, index) => <Update dt={dt} key={index} />)\r\n        : ''}\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport fire from '../config/fire';\r\n\r\n\r\n\r\nexport default function Mainpage() {\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleOnChangedata = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const createdata = () => {\r\n    const dataRef = fire.database().ref('text');\r\n    const text = {\r\n      title\r\n    };\r\n\r\n    dataRef.push(text);\r\n  };\r\n\r\n  const logout =()=>{\r\n    fire.auth().signOut();\r\n}\r\n  return (\r\n    <div>\r\n        <h1> **WELCOME**  </h1>\r\n        <input type=\"text\" placeholder=\"Enter to new text\" onChange={handleOnChangedata} value={title} />\r\n        <button onClick={createdata}>Add Data</button>\r\n        <button onClick= {logout} >logout</button>\r\n\r\n    </div>\r\n  );\r\n}","import React , {Component} from 'react';\nimport './App.css';\nimport fire from './config/fire';\nimport Login from './Login';\nimport Datafile from './component/Datafile'\nimport Mainpage from './component/Mainpage';\n\n\nclass App extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      user:{}\n    }\n  }\n  componentDidMount()\n  {\n    this.authListener();\n  }\n  authListener(){\n    fire.auth().onAuthStateChanged((user)=>{\n      if(user)\n      {\n        this.setState({user})\n      }\n      else{\n        this.setState({user:null})\n      }\n    })\n\n  }\n\n\n  render(){\n    return(\n      <div className= \"App\">\n        {this.state.user ? (<div><Mainpage/> <Datafile/> </div>) : (<Login/>)}       \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}